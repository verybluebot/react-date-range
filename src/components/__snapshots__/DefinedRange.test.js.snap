// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DefinedRange tests Should render dynamic static label contents correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DefinedRanges
    focusedRange={
      Array [
        0,
        0,
      ]
    }
    inputRanges={
      Array [
        Object {
          "getCurrentValue": [Function],
          "label": "days up to today",
          "range": [Function],
        },
        Object {
          "getCurrentValue": [Function],
          "label": "days starting today",
          "range": [Function],
        },
      ]
    }
    rangeColors={
      Array [
        "#3d91ff",
        "#3ecf8e",
        "#fed14c",
      ]
    }
    ranges={Array []}
    renderStaticRangeLabel={[Function]}
    staticRanges={
      Array [
        Object {
          "hasCustomRendering": true,
          "id": "italic",
          "isSelected": [Function],
          "range": Object {},
        },
        Object {
          "isSelected": [Function],
          "label": "Static Label",
          "range": Object {},
        },
        Object {
          "hasCustomRendering": true,
          "id": "whatever",
          "isSelected": [Function],
          "range": Object {},
        },
        Object {
          "hasCustomRendering": true,
          "id": "bold",
          "isSelected": [Function],
          "range": Object {},
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        undefined,
        <div
          className="rdrStaticRanges"
        >
          <button
            className="rdrStaticRange"
            onClick={[Function]}
            onFocus={[Function]}
            onMouseLeave={[Function]}
            onMouseOver={[Function]}
            style={
              Object {
                "color": null,
              }
            }
            type="button"
          >
            <span
              className="rdrStaticRangeLabel"
              tabIndex={-1}
            >
              <i
                className="italic-label-content"
              >
                Italic Content
              </i>
            </span>
          </button>
          <button
            className="rdrStaticRange"
            onClick={[Function]}
            onFocus={[Function]}
            onMouseLeave={[Function]}
            onMouseOver={[Function]}
            style={
              Object {
                "color": null,
              }
            }
            type="button"
          >
            <span
              className="rdrStaticRangeLabel"
              tabIndex={-1}
            >
              Static Label
            </span>
          </button>
          <button
            className="rdrStaticRange"
            onClick={[Function]}
            onFocus={[Function]}
            onMouseLeave={[Function]}
            onMouseOver={[Function]}
            style={
              Object {
                "color": null,
              }
            }
            type="button"
          >
            <span
              className="rdrStaticRangeLabel"
              tabIndex={-1}
            >
              <img
                className="random-image"
              />
            </span>
          </button>
          <button
            className="rdrStaticRange"
            onClick={[Function]}
            onFocus={[Function]}
            onMouseLeave={[Function]}
            onMouseOver={[Function]}
            style={
              Object {
                "color": null,
              }
            }
            type="button"
          >
            <span
              className="rdrStaticRangeLabel"
              tabIndex={-1}
            >
              <b
                className="bold-label-content"
              >
                Bold Content
              </b>
            </span>
          </button>
        </div>,
        <div
          className="rdrInputRanges"
        >
          <div
            className="rdrInputRange"
          >
            <input
              className="rdrInputRangeInput"
              max={99999}
              min={0}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              value="-"
            />
            <span
              className={undefined}
            >
              days up to today
            </span>
          </div>
          <div
            className="rdrInputRange"
          >
            <input
              className="rdrInputRangeInput"
              max={99999}
              min={0}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              value="-"
            />
            <span
              className={undefined}
            >
              days starting today
            </span>
          </div>
        </div>,
        undefined,
      ],
      "className": "rdrDefinedRangesWrapper",
    },
    "ref": null,
    "rendered": Array [
      undefined,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              className="rdrStaticRange"
              onClick={[Function]}
              onFocus={[Function]}
              onMouseLeave={[Function]}
              onMouseOver={[Function]}
              style={
                Object {
                  "color": null,
                }
              }
              type="button"
            >
              <span
                className="rdrStaticRangeLabel"
                tabIndex={-1}
              >
                <i
                  className="italic-label-content"
                >
                  Italic Content
                </i>
              </span>
            </button>,
            <button
              className="rdrStaticRange"
              onClick={[Function]}
              onFocus={[Function]}
              onMouseLeave={[Function]}
              onMouseOver={[Function]}
              style={
                Object {
                  "color": null,
                }
              }
              type="button"
            >
              <span
                className="rdrStaticRangeLabel"
                tabIndex={-1}
              >
                Static Label
              </span>
            </button>,
            <button
              className="rdrStaticRange"
              onClick={[Function]}
              onFocus={[Function]}
              onMouseLeave={[Function]}
              onMouseOver={[Function]}
              style={
                Object {
                  "color": null,
                }
              }
              type="button"
            >
              <span
                className="rdrStaticRangeLabel"
                tabIndex={-1}
              >
                <img
                  className="random-image"
                />
              </span>
            </button>,
            <button
              className="rdrStaticRange"
              onClick={[Function]}
              onFocus={[Function]}
              onMouseLeave={[Function]}
              onMouseOver={[Function]}
              style={
                Object {
                  "color": null,
                }
              }
              type="button"
            >
              <span
                className="rdrStaticRangeLabel"
                tabIndex={-1}
              >
                <b
                  className="bold-label-content"
                >
                  Bold Content
                </b>
              </span>
            </button>,
          ],
          "className": "rdrStaticRanges",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "0",
            "nodeType": "host",
            "props": Object {
              "children": <span
                className="rdrStaticRangeLabel"
                tabIndex={-1}
              >
                <i
                  className="italic-label-content"
                >
                  Italic Content
                </i>
              </span>,
              "className": "rdrStaticRange",
              "onClick": [Function],
              "onFocus": [Function],
              "onMouseLeave": [Function],
              "onMouseOver": [Function],
              "style": Object {
                "color": null,
              },
              "type": "button",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <i
                  className="italic-label-content"
                >
                  Italic Content
                </i>,
                "className": "rdrStaticRangeLabel",
                "tabIndex": -1,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Italic Content",
                  "className": "italic-label-content",
                },
                "ref": null,
                "rendered": "Italic Content",
                "type": "i",
              },
              "type": "span",
            },
            "type": "button",
          },
          Object {
            "instance": null,
            "key": "1",
            "nodeType": "host",
            "props": Object {
              "children": <span
                className="rdrStaticRangeLabel"
                tabIndex={-1}
              >
                Static Label
              </span>,
              "className": "rdrStaticRange",
              "onClick": [Function],
              "onFocus": [Function],
              "onMouseLeave": [Function],
              "onMouseOver": [Function],
              "style": Object {
                "color": null,
              },
              "type": "button",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Static Label",
                "className": "rdrStaticRangeLabel",
                "tabIndex": -1,
              },
              "ref": null,
              "rendered": "Static Label",
              "type": "span",
            },
            "type": "button",
          },
          Object {
            "instance": null,
            "key": "2",
            "nodeType": "host",
            "props": Object {
              "children": <span
                className="rdrStaticRangeLabel"
                tabIndex={-1}
              >
                <img
                  className="random-image"
                />
              </span>,
              "className": "rdrStaticRange",
              "onClick": [Function],
              "onFocus": [Function],
              "onMouseLeave": [Function],
              "onMouseOver": [Function],
              "style": Object {
                "color": null,
              },
              "type": "button",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <img
                  className="random-image"
                />,
                "className": "rdrStaticRangeLabel",
                "tabIndex": -1,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "random-image",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": "span",
            },
            "type": "button",
          },
          Object {
            "instance": null,
            "key": "3",
            "nodeType": "host",
            "props": Object {
              "children": <span
                className="rdrStaticRangeLabel"
                tabIndex={-1}
              >
                <b
                  className="bold-label-content"
                >
                  Bold Content
                </b>
              </span>,
              "className": "rdrStaticRange",
              "onClick": [Function],
              "onFocus": [Function],
              "onMouseLeave": [Function],
              "onMouseOver": [Function],
              "style": Object {
                "color": null,
              },
              "type": "button",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <b
                  className="bold-label-content"
                >
                  Bold Content
                </b>,
                "className": "rdrStaticRangeLabel",
                "tabIndex": -1,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Bold Content",
                  "className": "bold-label-content",
                },
                "ref": null,
                "rendered": "Bold Content",
                "type": "b",
              },
              "type": "span",
            },
            "type": "button",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="rdrInputRange"
            >
              <input
                className="rdrInputRangeInput"
                max={99999}
                min={0}
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                value="-"
              />
              <span
                className={undefined}
              >
                days up to today
              </span>
            </div>,
            <div
              className="rdrInputRange"
            >
              <input
                className="rdrInputRangeInput"
                max={99999}
                min={0}
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                value="-"
              />
              <span
                className={undefined}
              >
                days starting today
              </span>
            </div>,
          ],
          "className": "rdrInputRanges",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "0",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <input
                  className="rdrInputRangeInput"
                  max={99999}
                  min={0}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  value="-"
                />,
                <span
                  className={undefined}
                >
                  days up to today
                </span>,
              ],
              "className": "rdrInputRange",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "rdrInputRangeInput",
                  "max": 99999,
                  "min": 0,
                  "onBlur": [Function],
                  "onChange": [Function],
                  "onFocus": [Function],
                  "value": "-",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "days up to today",
                  "className": undefined,
                },
                "ref": null,
                "rendered": "days up to today",
                "type": "span",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": "1",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <input
                  className="rdrInputRangeInput"
                  max={99999}
                  min={0}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  value="-"
                />,
                <span
                  className={undefined}
                >
                  days starting today
                </span>,
              ],
              "className": "rdrInputRange",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "rdrInputRangeInput",
                  "max": 99999,
                  "min": 0,
                  "onBlur": [Function],
                  "onChange": [Function],
                  "onFocus": [Function],
                  "value": "-",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "days starting today",
                  "className": undefined,
                },
                "ref": null,
                "rendered": "days starting today",
                "type": "span",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      undefined,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          undefined,
          <div
            className="rdrStaticRanges"
          >
            <button
              className="rdrStaticRange"
              onClick={[Function]}
              onFocus={[Function]}
              onMouseLeave={[Function]}
              onMouseOver={[Function]}
              style={
                Object {
                  "color": null,
                }
              }
              type="button"
            >
              <span
                className="rdrStaticRangeLabel"
                tabIndex={-1}
              >
                <i
                  className="italic-label-content"
                >
                  Italic Content
                </i>
              </span>
            </button>
            <button
              className="rdrStaticRange"
              onClick={[Function]}
              onFocus={[Function]}
              onMouseLeave={[Function]}
              onMouseOver={[Function]}
              style={
                Object {
                  "color": null,
                }
              }
              type="button"
            >
              <span
                className="rdrStaticRangeLabel"
                tabIndex={-1}
              >
                Static Label
              </span>
            </button>
            <button
              className="rdrStaticRange"
              onClick={[Function]}
              onFocus={[Function]}
              onMouseLeave={[Function]}
              onMouseOver={[Function]}
              style={
                Object {
                  "color": null,
                }
              }
              type="button"
            >
              <span
                className="rdrStaticRangeLabel"
                tabIndex={-1}
              >
                <img
                  className="random-image"
                />
              </span>
            </button>
            <button
              className="rdrStaticRange"
              onClick={[Function]}
              onFocus={[Function]}
              onMouseLeave={[Function]}
              onMouseOver={[Function]}
              style={
                Object {
                  "color": null,
                }
              }
              type="button"
            >
              <span
                className="rdrStaticRangeLabel"
                tabIndex={-1}
              >
                <b
                  className="bold-label-content"
                >
                  Bold Content
                </b>
              </span>
            </button>
          </div>,
          <div
            className="rdrInputRanges"
          >
            <div
              className="rdrInputRange"
            >
              <input
                className="rdrInputRangeInput"
                max={99999}
                min={0}
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                value="-"
              />
              <span
                className={undefined}
              >
                days up to today
              </span>
            </div>
            <div
              className="rdrInputRange"
            >
              <input
                className="rdrInputRangeInput"
                max={99999}
                min={0}
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                value="-"
              />
              <span
                className={undefined}
              >
                days starting today
              </span>
            </div>
          </div>,
          undefined,
        ],
        "className": "rdrDefinedRangesWrapper",
      },
      "ref": null,
      "rendered": Array [
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                className="rdrStaticRange"
                onClick={[Function]}
                onFocus={[Function]}
                onMouseLeave={[Function]}
                onMouseOver={[Function]}
                style={
                  Object {
                    "color": null,
                  }
                }
                type="button"
              >
                <span
                  className="rdrStaticRangeLabel"
                  tabIndex={-1}
                >
                  <i
                    className="italic-label-content"
                  >
                    Italic Content
                  </i>
                </span>
              </button>,
              <button
                className="rdrStaticRange"
                onClick={[Function]}
                onFocus={[Function]}
                onMouseLeave={[Function]}
                onMouseOver={[Function]}
                style={
                  Object {
                    "color": null,
                  }
                }
                type="button"
              >
                <span
                  className="rdrStaticRangeLabel"
                  tabIndex={-1}
                >
                  Static Label
                </span>
              </button>,
              <button
                className="rdrStaticRange"
                onClick={[Function]}
                onFocus={[Function]}
                onMouseLeave={[Function]}
                onMouseOver={[Function]}
                style={
                  Object {
                    "color": null,
                  }
                }
                type="button"
              >
                <span
                  className="rdrStaticRangeLabel"
                  tabIndex={-1}
                >
                  <img
                    className="random-image"
                  />
                </span>
              </button>,
              <button
                className="rdrStaticRange"
                onClick={[Function]}
                onFocus={[Function]}
                onMouseLeave={[Function]}
                onMouseOver={[Function]}
                style={
                  Object {
                    "color": null,
                  }
                }
                type="button"
              >
                <span
                  className="rdrStaticRangeLabel"
                  tabIndex={-1}
                >
                  <b
                    className="bold-label-content"
                  >
                    Bold Content
                  </b>
                </span>
              </button>,
            ],
            "className": "rdrStaticRanges",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "0",
              "nodeType": "host",
              "props": Object {
                "children": <span
                  className="rdrStaticRangeLabel"
                  tabIndex={-1}
                >
                  <i
                    className="italic-label-content"
                  >
                    Italic Content
                  </i>
                </span>,
                "className": "rdrStaticRange",
                "onClick": [Function],
                "onFocus": [Function],
                "onMouseLeave": [Function],
                "onMouseOver": [Function],
                "style": Object {
                  "color": null,
                },
                "type": "button",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <i
                    className="italic-label-content"
                  >
                    Italic Content
                  </i>,
                  "className": "rdrStaticRangeLabel",
                  "tabIndex": -1,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Italic Content",
                    "className": "italic-label-content",
                  },
                  "ref": null,
                  "rendered": "Italic Content",
                  "type": "i",
                },
                "type": "span",
              },
              "type": "button",
            },
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "host",
              "props": Object {
                "children": <span
                  className="rdrStaticRangeLabel"
                  tabIndex={-1}
                >
                  Static Label
                </span>,
                "className": "rdrStaticRange",
                "onClick": [Function],
                "onFocus": [Function],
                "onMouseLeave": [Function],
                "onMouseOver": [Function],
                "style": Object {
                  "color": null,
                },
                "type": "button",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Static Label",
                  "className": "rdrStaticRangeLabel",
                  "tabIndex": -1,
                },
                "ref": null,
                "rendered": "Static Label",
                "type": "span",
              },
              "type": "button",
            },
            Object {
              "instance": null,
              "key": "2",
              "nodeType": "host",
              "props": Object {
                "children": <span
                  className="rdrStaticRangeLabel"
                  tabIndex={-1}
                >
                  <img
                    className="random-image"
                  />
                </span>,
                "className": "rdrStaticRange",
                "onClick": [Function],
                "onFocus": [Function],
                "onMouseLeave": [Function],
                "onMouseOver": [Function],
                "style": Object {
                  "color": null,
                },
                "type": "button",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <img
                    className="random-image"
                  />,
                  "className": "rdrStaticRangeLabel",
                  "tabIndex": -1,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "random-image",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "img",
                },
                "type": "span",
              },
              "type": "button",
            },
            Object {
              "instance": null,
              "key": "3",
              "nodeType": "host",
              "props": Object {
                "children": <span
                  className="rdrStaticRangeLabel"
                  tabIndex={-1}
                >
                  <b
                    className="bold-label-content"
                  >
                    Bold Content
                  </b>
                </span>,
                "className": "rdrStaticRange",
                "onClick": [Function],
                "onFocus": [Function],
                "onMouseLeave": [Function],
                "onMouseOver": [Function],
                "style": Object {
                  "color": null,
                },
                "type": "button",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <b
                    className="bold-label-content"
                  >
                    Bold Content
                  </b>,
                  "className": "rdrStaticRangeLabel",
                  "tabIndex": -1,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Bold Content",
                    "className": "bold-label-content",
                  },
                  "ref": null,
                  "rendered": "Bold Content",
                  "type": "b",
                },
                "type": "span",
              },
              "type": "button",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="rdrInputRange"
              >
                <input
                  className="rdrInputRangeInput"
                  max={99999}
                  min={0}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  value="-"
                />
                <span
                  className={undefined}
                >
                  days up to today
                </span>
              </div>,
              <div
                className="rdrInputRange"
              >
                <input
                  className="rdrInputRangeInput"
                  max={99999}
                  min={0}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  value="-"
                />
                <span
                  className={undefined}
                >
                  days starting today
                </span>
              </div>,
            ],
            "className": "rdrInputRanges",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "0",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    className="rdrInputRangeInput"
                    max={99999}
                    min={0}
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    value="-"
                  />,
                  <span
                    className={undefined}
                  >
                    days up to today
                  </span>,
                ],
                "className": "rdrInputRange",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "rdrInputRangeInput",
                    "max": 99999,
                    "min": 0,
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "-",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "days up to today",
                    "className": undefined,
                  },
                  "ref": null,
                  "rendered": "days up to today",
                  "type": "span",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    className="rdrInputRangeInput"
                    max={99999}
                    min={0}
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    value="-"
                  />,
                  <span
                    className={undefined}
                  >
                    days starting today
                  </span>,
                ],
                "className": "rdrInputRange",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "rdrInputRangeInput",
                    "max": 99999,
                    "min": 0,
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "-",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "days starting today",
                    "className": undefined,
                  },
                  "ref": null,
                  "rendered": "days starting today",
                  "type": "span",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        undefined,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
